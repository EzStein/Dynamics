cmake_minimum_required(VERSION 3.12)
project(dynsolver)
FUNCTION(PREPEND var prefix)
  SET(listVar "")
  FOREACH(f ${ARGN})
    LIST(APPEND listVar "${prefix}/${f}")
  ENDFOREACH(f)
  SET(${var} "${listVar}" PARENT_SCOPE)
ENDFUNCTION(PREPEND)
set(WX_WIDGETS_MODULES core base gl adv propgrid)
find_package(wxWidgets 3.0 COMPONENTS ${WX_WIDGETS_MODULES})
if(wxWidgets_FOUND)
  include("${wxWidgets_USE_FILE}")
  set(WX_WIDGETS_LIBS "${wxWidgets_LIBRARIES}")
else()
  message("Setting up wxWidgets build.")
  execute_process(COMMAND git submodule update --init external/wxWidgets
    WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}")
  add_subdirectory(external/wxWidgets)
  set(WX_WIDGETS_LIBS "${WX_WIDGETS_MODULES}")
endif()
find_package(Freetype)
if(Freetype_FOUND)
  set(FREETYPE_TARGET Freetype::Freetype)
else()
  execute_process(COMMAND git submodule update --init external/freetype2
    WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}")
  add_subdirectory(external/freetype2)
  set(FREETYPE_TARGET freetype)
endif()
FUNCTION(LOAD_GLAD)
  if(UNIX)
    set(EXTRA_GLAD_LIBS "${CMAKE_DL_LIBS}"
      CACHE INTERNAL "EXTRA_GLAD_LIBS")
  endif()
  set(GLAD_SRC "${CMAKE_BINARY_DIR}/glad/src/glad.c"
    CACHE INTERNAL "GLAD_SRC")
  set(GLAD_INCLUDE "${CMAKE_BINARY_DIR}/glad/include"
    CACHE INTERNAL "GLAD_INCLUDE")
  if(NOT EXISTS "${CMAKE_BINARY_DIR}/glad/src/glad.c"
      OR NOT EXISTS "${CMAKE_BINARY_DIR}/glad/include/glad/glad.h")
    message("Generating GL Loader...")
    execute_process(COMMAND git submodule update --init external/glad
      WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}")
    execute_process(COMMAND python -m glad --out-path "${CMAKE_BINARY_DIR}/glad"
      --generator c --spec gl --omit-khrplatform --api gl=4.3 --extensions ""
      WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/external/glad")
  endif()
ENDFUNCTION(LOAD_GLAD)
add_subdirectory(gui)
add_subdirectory(regex)
add_subdirectory(parser)
add_subdirectory(gl)
add_subdirectory(math)
add_subdirectory(asm)
add_subdirectory(compiler)
add_subdirectory(util)
add_subdirectory(app)
