#ifdef NO_COMPILATION_GUARD
#include <wx/glcanvas.h>
#include <list>
#include <algorithm>
#include <string>
#include <set>

#include "gl_program.h"
#include "glad/glad.h"
#include "generated.h"

// The top level frame that inherets from the generated class top_frame_base
// This class represents the view component of the MVC design. It handles all
// rendering using data from the model including openGL rendering.
class top_frame : public top_frame_base {
public:
  // Constructs this frame, initializing any data and updating the view to
  // reflect the model state.
  top_frame(wxWindow*, wxWindowID);

  // Destroys this frame.
  ~top_frame();
private:
  // The data associated with this program.
  model model;
  
  // The opengl canvas and contexts used to render the dynamical and parameter planes.
  wxGLCanvas* dynamicalCanvas;
  wxGLContext* dynamicalContext;
  wxGLCanvas* parameterCanvas;
  wxGLContext* parameterContext;
  
  gl_program program2d, program3d;
  GLuint vao2d, vao3d, vbo,
  axes3dVbo, axes3dVao,
  newtonVao, newtonVbo;

  render_data data;
  double pitch = 0, yaw = 0;

  /*These values are updated at each mouse down event*/
  math::static_vector<int, 2> initMousePos;
  math::static_vector<int, 2> initViewportCenter;

  math::static_vector<float, 3> initCameraDirection;

  math::static_vector<double, 2> initZoomViewportCenter;
  math::static_vector<double, 2> initZoomCenter;
  math::static_vector<double, 2> initViewportSpan;
  double totalMag;

  // Loads the openGL function pointers and initializes openGL objects.
  void initialize_gl();

  // Events generated by wxWidgets will call these functions accordingly.
  void on_paint_dynamical_plane(wxPaintEvent&);
  void on_left_down_dynamical_plane(wxMouseEvent&);
  void on_right_down_dynamical_plane(wxMouseEvent&);
  void on_motion_dynamical_plane(wxMouseEvent&);
  void on_size_dynamical_plane( wxSizeEvent& );
  void on_key_down_dynamical_plane( wxKeyEvent& );
  void on_key_up_dynamical_plane( wxKeyEvent& );
  void on_mouse_wheel_dynamical_plane(wxMouseEvent&);
  void on_magnify_dynamical_plane(wxMouseEvent&);
  virtual void on_button_click_compile(wxCommandEvent&) override;
  virtual void on_size_top_frame( wxSizeEvent& event ) override;
  virtual void on_menu_selection_vector_field(wxCommandEvent&) override;
  virtual void on_axis_choice(wxCommandEvent&) override;
  virtual void on_text_enter_dimension(wxCommandEvent& evt) override;
  virtual void on_3d_render_check(wxCommandEvent& evt) override;
  virtual void on_text_enter_parameters(wxCommandEvent& evt) override;
  virtual void on_parameter_axis_choice(wxCommandEvent& evt) override;
  virtual void on_paint_parameter_plane(wxPaintEvent&) override;
  virtual void on_motion_parameter_plane(wxMouseEvent& evt) override;
};
#endif
